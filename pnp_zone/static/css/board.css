:root {
    --sqrt3: 1.7320508075688772; /* the square root of 3 is used in calculating a hexagons sides */
}

.board-element {
    position: absolute;
    z-index: inherit;
    top: 0;
    left: 0;
}
#background {
    z-index: -50;
}
#grid {
    z-index: 0;
}
#cursors {
    z-index: 100;
}
.cursor p {
    position: absolute;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
}
.cursor span {
    position: absolute;
    height: 10px;
    width: 10px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
}
#moderator {
    background: #16232d;
}
.moderator-child {
    padding: 1vw;
}
#moderator input {
    width: 8vw;
}
.toggleModerator {
    position: fixed;
    right: 0;
    top: 0;
    z-index: 150;
}
#board-view {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: fixed;
    left: 0;
    top: 0;
    z-index: -1;
}

#context-menu {
    color: #ffffff;
    z-index: 999;
    position: absolute;
}
#context-menu div {
    background: #192734;
    border: 1px solid #422d78;
    display: flex;
    flex-direction: column;
}
#context-menu hr {
    color: #422d78;
    margin: 0;
}
#context-menu button {
    border: none;
    width: 20em;
    text-align: left;
    padding: 0.5em 2em;
}

/* Character */
.character {
    z-index: 50;
    transition-property: left, top;
    transition-duration: 1s;
    position: absolute;
    width: 0;
    height: 0;
    cursor: grab;
}
.character > p {
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap;
    display: flex;
    justify-content: center;
    align-items: center;
    width: inherit;
    height: inherit;
    margin: 0;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
}

/* Hitbox */
.hitbox {
    --frameWidth: max(0.01vw, 1px);

    position: absolute;
}
.hitbox-frame {
    position: absolute;
    width: 100%;
    height: 100%;
    top: calc(-1 * var(--frameWidth));
    left: calc(-1 * var(--frameWidth));
    border: var(--frameWidth) solid #ccc;
    cursor: move;
}
.hitbox-bobble {
    --bobbleSize: 0.5vw;
    --borderSize: 0.01vw;
    --corner: calc(-1 * var(--bobbleSize) / 2 - var(--frameWidth));
    --edge: calc(50% - var(--bobbleSize) / 2);

    position: absolute;
    background-color: #00f;
    border: var(--borderSize) solid #ccc;
    width: calc(var(--bobbleSize) - 2 * var(--borderSize));
    height: calc(var(--bobbleSize) - 2 * var(--borderSize));
    left: auto;
    right: auto;
    top: auto;
    bottom: auto;
}
.hitbox-bobble.n{
    left: var(--edge);
    top: var(--corner);
    cursor: ns-resize;
}
.hitbox-bobble.ne {
    top: var(--corner);
    right: var(--corner);
    cursor: nesw-resize;
}
.hitbox-bobble.e {
    top: var(--edge);
    right: var(--corner);
    cursor: ew-resize;
}
.hitbox-bobble.se {
    right: var(--corner);
    bottom: var(--corner);
    cursor: nwse-resize;
}
.hitbox-bobble.s {
    left: var(--edge);
    bottom: var(--corner);
    cursor: ns-resize;
}
.hitbox-bobble.sw {
    left: var(--corner);
    bottom: var(--corner);
    cursor: nesw-resize;
}
.hitbox-bobble.w {
    left: var(--corner);
    top: var(--edge);
    cursor: ew-resize;
}
.hitbox-bobble.nw {
    left: var(--corner);
    top: var(--corner);
    cursor: nwse-resize;
}

/* Tabs */
.tab {
    cursor: pointer;
    background-color: #15202b;
    padding: 0.5em 1em 0.5em 1em;
    border-radius: 0 10px 10px 0;
    margin-right: 1vw;
    transition: margin-right 300ms, padding-left 300ms;
}
.tab:hover {
    background-color: #233549;
}
.active-tab {
    margin-right: 0;
    padding-left: 2vw;
}

iframe {
    border: none;
}

.campaignItem-hover {
    background-color: #205067;
    cursor: pointer;
}

.hexagon {
	--width: 100px;
    --height: calc(var(--width) / var(--sqrt3));
    --color: black;
}

.hexagon, .hexagon::before, .hexagon::after {
	background-color: var(--color);
	width: var(--width);
    height: var(--height);
    position: absolute;
}
.hexagon {
    left: calc(50% - 0.5 * var(--width));
    top: calc(50% - 0.5 * var(--height));
}
.hexagon::before, .hexagon::after {
	content: "";
	display: block;
}
.hexagon::before {
	transform: rotate(120deg);
}
.hexagon::after {
	transform: rotate(-120deg);
}

.colorPicker {
    --width: 7em;
    --inner-width: calc(var(--width) * 0.8);
    width: var(--width);
    height: calc(var(--width) * 2 / var(--sqrt3));
    margin: 5px;
    position: relative;
}
.colorPicker > .hexagon:first-child {--width: inherit;}
.colorPicker > .hexagon:last-child {--width: var(--inner-width);}
.colorPicker input[type="color"] { display: none; }
