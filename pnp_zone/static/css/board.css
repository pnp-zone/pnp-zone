:root {
    --sqrt3: 1.7320508075688772; /* the square root of 3 is used in calculating a hexagons sides */
}

.board-element {
    position: absolute;
    top: 0;
    left: 0;
}
.cursor p {
    position: absolute;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
}
.cursor span {
    position: absolute;
    height: 10px;
    width: 10px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
}
#board-view {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: fixed;
    left: 0;
    top: 0;
    z-index: -1;
}

#context-menu {
    color: var(--text-color);
    z-index: 999;
    position: absolute;
}
#context-menu div {
    background: var(--modal-color);
    border: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
}
#context-menu hr {
    color: var(--border-color);
    margin: 0;
}
#context-menu button {
    border: none;
    width: 20em;
    text-align: left;
    padding: 0.5em 2em;
}

.character {
    transition-property: left, top;
    transition-duration: 1s;
    position: absolute;
    width: 0;
    height: 0;
    cursor: grab;
}
.character > p {
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap;
    display: flex;
    justify-content: center;
    align-items: center;
    width: inherit;
    height: inherit;
    margin: 0;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
}
.character > .hexagon {
    transform: scale(0.8);
}

.hitbox {
    --frameWidth: max(0.01vw, 1px);

    position: absolute;
    z-index: inherit;
}
.hitbox-frame {
    position: absolute;
    width: 100%;
    height: 100%;
    top: calc(-1 * var(--frameWidth));
    left: calc(-1 * var(--frameWidth));
    border: var(--frameWidth) solid #ccc;
    cursor: move;
}
.hitbox-bobble {
    --bobbleSize: 0.5vw;
    --borderSize: 0.01vw;
    --corner: calc(-1 * var(--bobbleSize) / 2 - var(--frameWidth));
    --edge: calc(50% - var(--bobbleSize) / 2);

    position: absolute;
    background-color: #00f;
    border: var(--borderSize) solid #ccc;
    width: calc(var(--bobbleSize) - 2 * var(--borderSize));
    height: calc(var(--bobbleSize) - 2 * var(--borderSize));
    left: auto;
    right: auto;
    top: auto;
    bottom: auto;
}
.hitbox-bobble.n{
    left: var(--edge);
    top: var(--corner);
    cursor: ns-resize;
}
.hitbox-bobble.ne {
    top: var(--corner);
    right: var(--corner);
    cursor: nesw-resize;
}
.hitbox-bobble.e {
    top: var(--edge);
    right: var(--corner);
    cursor: ew-resize;
}
.hitbox-bobble.se {
    right: var(--corner);
    bottom: var(--corner);
    cursor: nwse-resize;
}
.hitbox-bobble.s {
    left: var(--edge);
    bottom: var(--corner);
    cursor: ns-resize;
}
.hitbox-bobble.sw {
    left: var(--corner);
    bottom: var(--corner);
    cursor: nesw-resize;
}
.hitbox-bobble.w {
    left: var(--corner);
    top: var(--edge);
    cursor: ew-resize;
}
.hitbox-bobble.nw {
    left: var(--corner);
    top: var(--corner);
    cursor: nwse-resize;
}

.side-menu {
    position: fixed;
    transition: left 0.5s;
    height: 0;
    --width: 30vw;
    --edge: max(0.5em, 1px);
}
.side-menu > .pages, .side-menu > .edge {
    height: 100vh;
    background-color: var(--background-color);
}
.side-menu > .pages {
    overflow: hidden;
    width: calc(min(100vw, var(--width)) - var(--edge));
}
.side-menu > .edge {
    width: var(--edge);
    cursor: ew-resize;
}
.side-menu > .tabs {
}
.side-menu .layer-list tr {
    background-color: var(--highlighted-background-color);
    transition: background-color 300ms;
}
.side-menu .layer-list td {
    padding: 0.5em 1em;
}
.side-menu img.icon {
    width: 2em;
    height: 2em;
}
.side-menu img {
    filter: invert(100%);
}

.tab {
    cursor: pointer;
    background-color: var(--background-color);
    padding: 0.5em 1em 0.5em 1em;
    border-radius: 0 10px 10px 0;
    margin-right: 1vw;
    transition: margin-right 300ms, padding-left 300ms;
}
.tab:hover {
    background-color: var(--highlighted-background-color);
}
.active-tab {
    margin-right: 0;
    padding-left: 2vw;
}
.tab img.icon {
    width: 1.5em;
    height: 1.5em;
}

iframe {
    border: none;
}

.hexagon, .hexagon::before, .hexagon::after {
    --width: 100px;
    --height: calc(var(--width) * 2 / var(--sqrt3));
    position: absolute;
    width: var(--width);
    height: var(--height);
    left: calc(50% - 0.5 * var(--width));
    top: calc(50% - 0.5 * var(--height));
}
.hexagon::after {
    content: "";
    display: block;
    background-color: var(--border-color);
    clip-path: polygon(evenodd, 0 25%, 50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0 27%, 2% 27%, 50% 3%, 98% 27%, 98% 73%, 50% 97%, 2% 73%, 2% 27%, 0 27%);
}
.hexagon {
    --color: white;
    --border-color: black;
    background-color: var(--color);
    clip-path: polygon(0 25%, 50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%);
}

.tilePreview {
    position: relative;
    width: 7em;
    height: calc(7em * 2 / var(--sqrt3));
    margin: 5px;
    clip-path: polygon(0 25%, 50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%);
    background-image:
            repeating-linear-gradient(45deg, gray 25%, transparent 25%, transparent 75%, gray 75%, gray),
            repeating-linear-gradient(45deg, gray 25%, lightgray 25%, lightgray 75%, gray 75%, gray);
    background-position: 0 0, 0.5em 0.5em;
    background-size: 1em 1em;
}
.tilePreview > div {
    position: absolute;
    width: inherit;
    height: inherit;
    left: 0;
    top: 0;
}
.tilePreview > div:first-child {
    clip-path: inherit;
    background-color: var(--color);
}
.tilePreview > div:last-child {
    clip-path: polygon(evenodd, 0 25%, 50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0 30%, 10% 30%, 50% 10%, 90% 30%, 90% 70%, 50% 90%, 10% 70%, 10% 30%, 0 30%);
    background-color: var(--color);
}

.color-picker {
    display: inline-flex;
    --slider-border: 1px;
    --slider-inner: 1px;
    --hue: 0;
    --saturation: 0%;
    --lightness: 0%;
    --red: 0;
    --green: 0;
    --blue: 0;
}
.color-picker .slider {
    position: absolute;
    width: 0;
    height: 0;
    top: 0;
    left: 0;
    background-color: black;
    border: var(--slider-border) solid white;
    --ratio: 0;
}
.color-picker .slider.vertical {
    width: calc(100% - 2 * var(--slider-border));
    top: calc(100% * var(--ratio) - var(--slider-border) - var(--slider-inner) / 2);
    height: var(--slider-inner);
}
.color-picker .slider.horizontal {
    height: calc(100% - 2 * var(--slider-border));
    left: calc(100% * var(--ratio) - var(--slider-border) - var(--slider-inner) / 2);
    width: var(--slider-inner);
}
.color-picker .plot {
    position: relative;
    margin: 0.5em;
    width: 1em;
    height: 1em;
    overflow: hidden;
}
.color-picker .plot.vertical {
    height: 10em;
}
.color-picker .plot.horizontal {
    width: 10em;
}
.color-picker .plot.sv {
    background:
      linear-gradient(to bottom, transparent, rgb(0, 0, 0)),
      linear-gradient(to left, hsl(var(--hue), 100%, 50%), rgb(255, 255, 255));
}
.color-picker .plot.hue {background: linear-gradient(to bottom, #f00, #ff0, #0f0, #0ff, #00f, #f0f, #f00);}
.color-picker .plot.red {background: linear-gradient(to right, rgb(0, var(--green), var(--blue)), rgb(255, var(--green), var(--blue)));}
.color-picker .plot.green {background: linear-gradient(to right, rgb(var(--red), 0, var(--blue)), rgb(var(--red), 255, var(--blue)));}
.color-picker .plot.blue {background: linear-gradient(to right, rgb(var(--red), var(--green), 0), rgb(var(--red), var(--green), 255));}
.color-picker .plot.alpha {
    background-image:
            repeating-linear-gradient(45deg, gray 25%, transparent 25%, transparent 75%, gray 75%, gray),
            repeating-linear-gradient(45deg, gray 25%, lightgray 25%, lightgray 75%, gray 75%, gray);
    background-position: 0 0, 0.5em 0.5em;
    background-size: 1em 1em;
}
.color-picker .plot.alpha::after {
    content: "";
    display: inherit;
    width: inherit;
    height: inherit;
    background: linear-gradient(to bottom, hsl(var(--hue), var(--saturation), var(--lightness)), transparent);
}
.color-picker div.preview {
    height: 1.5em;
    margin: 0.5em;
    background-image:
            repeating-linear-gradient(45deg, gray 25%, transparent 25%, transparent 75%, gray 75%, gray),
            repeating-linear-gradient(45deg, gray 25%, lightgray 25%, lightgray 75%, gray 75%, gray);
    background-position: 0 0, 0.5em 0.5em;
    background-size: 1em 1em;
}
.color-picker div.preview::after {
    content: "";
    display: inherit;
    width: inherit;
    height: inherit;
    background-color: inherit;
}
